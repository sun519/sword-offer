// 方法一 DP动态规划
function GetUglyNumber_Solution(index) {
    if(index <= 0) {
        return 0;
    }
    if(index === 1) {
        return 1;
    }
    let arr = [];
    arr[0] = 1;
    let t2 = 0,
        t3 = 0,
        t5 = 0,
        i = 0;
    for(i = 1; i < index; i++) {
        arr[i] = Math.min(arr[t2]*2, Math.min(arr[t3]*3, arr[t5]*5));
        if(arr[i] === arr[t2]*2) {
            t2++;
        }
        if(arr[i] === arr[t3]*3) {
            t3++;
        }
        if(arr[i] === arr[t5]*5) {
            t5++;
        }
    }
    return arr[index-1];
}

console.log(GetUglyNumber_Solution(2))


// 方法二 循环遍历
function GetUglyNumber_Solution(index) {
    function check(num) {
        while(num % 2 === 0) {
            num /= 2;
        }
        while(num % 3 === 0) {
            num /= 3;
        }
        while(num % 5 === 0) {
            num /= 5;
        }

        return num === 1 ? true : false;
    }

    let sum = 0,
        number = 1;
    if(index <= 0) {
        return 0;
    }
    while(sum < index) {
        number++; 
        if(check(number)) {
            sum++;
        }               
    }
    return number;
}
console.log(GetUglyNumber_Solution(7))