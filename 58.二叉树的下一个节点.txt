function TreeLinkNode(x) {
    this.val = x;
    this.left = null;
    this.right = null;
    this.next = null;
}

function GetNext(node) {
    if(node === null) {
        return null;
    }
    // 若当前节点如果有右子树，则找右子树的最左节点
    if(node.right !== null) {
        node = node.right;
        while(node.left !== null) {
            node = node.left;
        }
        return node;
    }
    // 若当前节点没右子树，则找到第一个当前节点是它父节点的左孩子节点，这个节点的父节点就是我们要找的下一个节点
    while(node.next !== null) {
        // 如果node的next的左孩子节点是node
        if(node.next.left === node) {
            return node.next;
        }
        node = node.next;
    }
    // 退到了根节点仍没找到，则返回null
    return null;
}