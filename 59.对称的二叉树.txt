/* function TreeNode(x) {
    this.val = x;
    this.left = null;
    this.right = null;
} */
// 递归版本
function isSymmetrical(pRoot) {
    // 空二叉树情况
    if(pRoot === null) {
        return true;
    }
    return comRoot(pRoot.left, pRoot.right);
}

function comRoot(pl, pr) {
    // 递归的过程中同时为空说明是对称的
    if(pl === null && pr === null) {
        return true;
    }
    // 排除上面的可能,下面当中只要有一个为null就说明是false
    if(pl === null || pr === null) {
        return false;
    }
    if(pl.val !== pr.val) {
        return false;
    }
    return (comRoot(pl.left, pr.right) && comRoot(pl.right, pr.left));
}