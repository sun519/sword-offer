<!DOCTYPE html>
<html>
<head>
    <title>Form Fields Example</title>
    <style>
    #div {
        width:100px;
        height:100px;
        background-color: yellow;
        position: absolute;
    }
    </style>
</head>
<body>
<!--
<div id="1" class="2"></div>
<canvas width="200" height="200" id="drawing">a drqawing of something</canvas> 
<div id="myDiv" class="bd" title="Body text" lang="en" dir="ltr" my_special_attribute="hello!">Some text</div>
<div id="div1">
    <p><b>hello</b>word</p>
    <ul id="ul">
        <li>1</li>
        <li>2</li>
        <li>3</li>
    </ul>
</div>
</div>
-->
<div class="draggable" id="div">



<script type="text/javascript">
let EventUtil = {
    addHandler: function(element,type,handle) {
        if(element.addEventListener) {
            element.addEventListener(type,handle,false);
        }else if(element.attachEvent) {
            element.attachEvent("on"+type,handle)
        }else {
            element["on" + type] = handle;
        }
    },
    getEvent: function(event) {
        return event ? event : window.event;
    },
    getTarget: function(event) {
        return event.target || event.srcElement;
    },
    removeHandler: function(element,type,handle) {
        if(element.removeEventListener) {
            element.removeEventListener(type,handle,false);
        }else if(element.detachEvent) {
            element.detachEvent("on"+type,handle)
        }else {
            element["on" + type] = null;
        }
    }
}

// 为什么es6写法就不对？ let Dragdrop = () => {}
var Dragdrop = function() {
    let dragging = null;
    let difX = 0,
        difY = 0;
    let handleEvent = (event) => {
        event = EventUtil.getEvent(event);
        let target = EventUtil.getTarget(event);

        switch(event.type) {
            case 'mousedown':
                if (target.className.indexOf("draggable") !== -1) {
                    dragging = target;
                    difX = event.clientX - target.offsetLeft;
                    difY = event.clientY - target.offsetTop;
                }
                break;
            case 'mousemove':
                if(dragging !== null) {
                    dragging.style.left = (event.clientX - difX) + 'px';
                    dragging.style.top = (event.clientY - difY) + 'px';
                }
                break;
            case 'mouseup':
                dragging = null;
                break;
        }
    };

    return {
        enable: function() {
            EventUtil.addHandler(document,'mousedown',handleEvent);
            EventUtil.addHandler(document,'mousemove',handleEvent);
            EventUtil.addHandler(document,'mouseup',handleEvent);
        },
        disable: function() {
            EventUtil.removeHandler(document,'mousedown',handleEvent);
            EventUtil.removeHandler(document,'mousemove',handleEvent);
            EventUtil.removeHandler(document,'mouseup',handleEvent);
        }
    }
}()

Dragdrop.enable();
</script>
</body>
</html>


