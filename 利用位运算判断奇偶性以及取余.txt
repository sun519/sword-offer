   // 位运算时间效率高，强烈推荐这么用
 for(var i = 0; i < arr.length; i++) {
        // 这里是位运算 之所以加括号是因为 ===的优先级大于&，相与结果为1是奇数，结果为0是偶数
        // 例:8的二进制1000,1的二进制为0001  按位与得到1000 & 0001=0000,再比如7的二进制为0111  按位与得到 0111&0001=0001
        if((arr[i]&1) === 1) { // 其实也可以取余运算,if((arr[i]%2 === 1)只不过取余运算时间效率没位运算效果好
            oddArr.push(arr[i]);
        }else if((arr[i]&1) === 0) {
            evenArr.push(arr[i]);
        }
    }


// 位运算取余(有局限)
var a = 11,
    b = 8;
// 只适用于除数是2的n次方时 11二进制1011  8的二进制1000  8减去1得7的二进制0111。 按位与得到1011 & 0111 = 0011，即余数为3
console.log(a&(b-1));