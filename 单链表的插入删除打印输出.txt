function Node(element) {  
　　this.element = element;//当前节点的数据  
　　this.next = null;//下一个节点数据  
} 

function LList() {    
   this.head = new Node("head");//头节点  
}    
LList.prototype={    
 //查找某一节点  
 find:function (item) {    
   var currNode = this.head;    
   while (currNode.element != item) {    
      currNode = currNode.next;    
   }    
   return currNode;    
 },    
 //向某一元素后面插入新节点  
 insert:function(newElement,item){    
   var newNode = new Node(newElement);    
   var current = this.find(item);    
   newNode.next = current.next;    
   current.next = newNode;    
 },    
 //查找某一节点的前一个节点(前驱)  
 findPrevious:function(item){    
   var currNode = this.head;    
   while (!(currNode.next == null) &&(currNode.next.element != item)) {    
      currNode = currNode.next;    
   }    
   return currNode;    
 },    
 //删除某一个节点  
 remove:function(item){    
   var prevNode = this.findPrevious(item);    
   if (!(prevNode.next == null)) {    
      prevNode.next = prevNode.next.next;    
   }    
 },  
 //修改某一节点的数据  
 edit:function(item,newItem){  
     var element=this.find(item);  
     element.element=newItem;  
 },    
 //在控制台打印出所有节点(为了方便预览)  
 display:function(){    
   var currNode = this.head;    
   while (!(currNode.next == null)) {    
      console.log(currNode.next.element);    
      currNode = currNode.next;    
   }    
 }    
}

var names = new LList();  
names.insert("likek", "head");//往头节点后插入节点likek  
names.insert("zhangsan", "likek");//往likek后插入节点zhangsan  
names.insert("lisi", "zhangsan");//往zhangsan后插入节点lisi  
names.insert("wangwu", "lisi");//往lisi后插入节点wangwu  
names.display();  
/*likek 
 zhangsan 
 lisi 
 wangwu*/  
names.remove("zhangsan");//删除zhangsan节点  
names.display();  
/*likek 
 lisi 
 wangwu*/  
names.edit("lisi","wangnima");//将lisi节点改为wangnima  
names.display();  