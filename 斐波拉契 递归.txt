<!DOCTYPE html>
<html>
<head lang="en">
<meta charset="UTF-8">
<title></title>
<meta name="viewport" content="user-scalable=no , width=device-width , initial-scale=1 , maximum-scale=1">
<style>
body{padding:0; overflow:hidden;}
</style>
</head>
<div></div>
<script>
//递归方案 时间复杂度o(2^n)，空间复杂度o(n)
function fib(n) {
    if(n == 1 || n ==2) {
        return 1;
    }
    return fib(n-1) + fib(n-2);
   //等价于
   
}
console.log(fib(10));

//memoization方案 将函数执行结果用变量缓存起来的方法
let fib = (function() {
    let memory= []
    return function(n) {
        if(memory[n] != undefined) {
            return memory[n];
        }
        return memory[n] = (n === 0 || n === 1) ? n : fib(n-1) + fib(n-2)
    }
})()

//动态规划方案
function fibonacci(n) {
    let n1 = 1,
        n2 = 1,
        sum = 1
    for(let i = 3; i <= n; i += 1) {
        sum = n1 + n2
        n1 = n2
        n2 = sum
    }
    return sum
}
//尾递归
//'use strict'
function fibonacci(n, n1, n2) {
    if(n <= 1) {
        return n2
    }
    return fibonacci(n - 1, n2, n1 + n2)
}
</script>
</body>
</html>